local icon = require('plugins.config.shared.icon')

require('dropbar').setup {
  icons = {
    enable = true,
    kinds = {
      symbols = {
        Array = icon.symbol.array .. ' ',
        Boolean = icon.symbol.boolean .. ' ',
        BreakStatement = icon.symbol.break_statement .. ' ',
        Call = icon.symbol.call .. ' ',
        CaseStatement = icon.symbol.case_statement .. ' ',
        Class = icon.symbol.class .. ' ',
        Color = icon.symbol.color .. ' ',
        Constant = icon.symbol.constant .. ' ',
        Constructor = icon.symbol.constructor .. ' ',
        ContinueStatement = icon.symbol.continue_statement .. ' ',
        Copilot = icon.symbol.copilot .. ' ',
        Declaration = icon.symbol.declaration .. ' ',
        Delete = icon.symbol.delete .. ' ',
        DoStatement = icon.symbol.do_statement .. ' ',
        Enum = icon.symbol.enum .. ' ',
        EnumMember = icon.symbol.enum_member .. ' ',
        Event = icon.symbol.event .. ' ',
        Field = icon.symbol.field .. ' ',
        File = icon.symbol.file .. ' ',
        Folder = icon.symbol.folder .. ' ',
        ForStatement = icon.symbol.for_statement .. ' ',
        Function = icon.symbol.func .. ' ',
        Identifier = icon.symbol.identifier .. ' ',
        IfStatement = icon.symbol.if_statement .. ' ',
        Interface = icon.symbol.interface .. ' ',
        Keyword = icon.symbol.keyword .. ' ',
        List = icon.symbol.list .. ' ',
        Log = icon.symbol.log .. ' ',
        Lsp = icon.symbol.lsp .. ' ',
        Macro = icon.symbol.macro .. ' ',
        MarkdownH1 = icon.symbol.markdown_h1 .. ' ',
        MarkdownH2 = icon.symbol.markdown_h2 .. ' ',
        MarkdownH3 = icon.symbol.markdown_h3 .. ' ',
        MarkdownH4 = icon.symbol.markdown_h4 .. ' ',
        MarkdownH5 = icon.symbol.markdown_h5 .. ' ',
        MarkdownH6 = icon.symbol.markdown_h6 .. ' ',
        Method = icon.symbol.method .. ' ',
        Module = icon.symbol.module .. ' ',
        Namespace = icon.symbol.namespace .. ' ',
        Null = icon.symbol.null .. ' ',
        Number = icon.symbol.number .. ' ',
        Object = icon.symbol.object .. ' ',
        Operator = icon.symbol.operator .. ' ',
        Package = icon.symbol.package .. ' ',
        Property = icon.symbol.property .. ' ',
        Reference = icon.symbol.reference .. ' ',
        Regex = icon.symbol.regex .. ' ',
        Repeat = icon.symbol.rep .. ' ',
        Scope = icon.symbol.scope .. ' ',
        Snippet = icon.symbol.snippet .. ' ',
        Specifier = icon.symbol.specifier .. ' ',
        Statement = icon.symbol.statement .. ' ',
        String = icon.symbol.string .. ' ',
        Struct = icon.symbol.struct .. ' ',
        SwitchStatement = icon.symbol.switch_statement .. ' ',
        Text = icon.symbol.text .. ' ',
        Type = icon.symbol.type .. ' ',
        TypeParameter = icon.symbol.type_parameter .. ' ',
        Unit = icon.symbol.unit .. ' ',
        Value = icon.symbol.value .. ' ',
        Variable = icon.symbol.variable .. ' ',
        WhileStatement = icon.symbol.while_statement .. ' ',
      },
    },
  },
  menu = {
    win_configs = {
      border = 'rounded',
    },
  },
}

vim.keymap.set('n', '<Leader>p', require('dropbar.api').pick)
